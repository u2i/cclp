teammembers = 1

jQuery(document).ready () ->
  # submitFormListener()

  jQuery('#gallery').magnificPopup({
    items: [
      {src: 'images/photos/coding-challenge-1.jpg', type: 'image'},{src: 'images/photos/coding-challenge-2.jpg', type: 'image'},{src: 'images/photos/coding-challenge-3.jpg', type: 'image'},{src: 'images/photos/coding-challenge-4.jpg', type: 'image'},{src: 'images/photos/coding-challenge-5.jpg', type: 'image'},{src: 'images/photos/coding-challenge-6.jpg', type: 'image'},{src: 'images/photos/coding-challenge-7.jpg', type: 'image'},{src: 'images/photos/coding-challenge-8.jpg', type: 'image'},{src: 'images/photos/coding-challenge-9.jpg', type: 'image'},{src: 'images/photos/coding-challenge-10.jpg', type: 'image'},{src: 'images/photos/coding-challenge-11.jpg', type: 'image'},{src: 'images/photos/coding-challenge-12.jpg', type: 'image'},{src: 'images/photos/coding-challenge-13.jpg', type: 'image'},{src: 'images/photos/coding-challenge-14.jpg', type: 'image'},{src: 'images/photos/coding-challenge-15.jpg', type: 'image'},{src: 'images/photos/coding-challenge-16.jpg', type: 'image'},{src: 'images/photos/coding-challenge-17.jpg', type: 'image'},{src: 'images/photos/coding-challenge-18.jpg', type: 'image'},{src: 'images/photos/coding-challenge-19.jpg', type: 'image'},{src: 'images/photos/coding-challenge-20.jpg', type: 'image'},{src: 'images/photos/coding-challenge-21.jpg', type: 'image'},{src: 'images/photos/coding-challenge-22.jpg', type: 'image'}
    ],
    gallery: {
      enabled: true
    },
    type: 'image',
    closeBtnInside: false,
  });

  jQuery('nav a').click (e) ->
    e.preventDefault()
    cont = jQuery(jQuery(e.currentTarget).attr('href')).offset().top
    jQuery('html, body').scrollTop(cont - 90)
    return
  return


# submitFormListener = () ->
#   form = jQuery('form')
#   form.on 'submit', (e) ->
#     e.preventDefault()
#     console.log e, form.serialize()
#     jQuery.ajax(
#       method: 'POST'
#       url: 'http://localhost:7000/admin/registration_requests'
#       data: form.serialize()).done (msg) ->
#       alert 'Data Saved: ' + msg
#       return
#     return
#   return

# Variable to hold request
request = undefined
# Bind to the submit event of our form
jQuery(document).on 'submit', '#u2icc-form', (event) ->
  # Abort any pending request
  if request
    request.abort()
  # setup some local variables
  $form = jQuery(this)
  # Let's select and cache all the fields
  $inputs = $form.find('input, select, button, textarea')
  # Serialize the data in the form
  serializedData = $form.serialize()
  # Let's disable the inputs for the duration of the Ajax request.
  # Note: we disable elements AFTER the form data has been serialized.
  # Disabled form elements will not be serialized.
  $inputs.prop 'disabled', true
  # Fire off the request to /form.php
  request = $.ajax(
    url: 'https://script.google.com/macros/s/AKfycbwo3RtDGZbzT_n8b4yoBKOZWw573Ym8yDgrA5jm430OunWsJ5g/exec'
    type: 'post'
    data: serializedData)
  # Callback handler that will be called on success
  request.done (response, textStatus, jqXHR) ->
    # Log a message to the console
    console.log serializedData
    console.log 'Hooray, it worked!'
    console.log response
    console.log textStatus
    console.log jqXHR
    jQuery('form').slideUp()
    jQuery('#ty').slideDown()
    return
  # Callback handler that will be called on failure
  request.fail (jqXHR, textStatus, errorThrown) ->
    # Log the error to the console
    console.error 'The following error occurred: ' + textStatus, errorThrown
    return
  # Callback handler that will be called regardless
  # if the request failed or succeeded
  request.always ->
    # Reenable the inputs
    $inputs.prop 'disabled', false
    return
  # Prevent default posting of form
  event.preventDefault()
  return

# ---
# generated by js2coffee 2.2.0
